openapi: 3.0.0
info:
  title: EazyShop Products APIs Definition
  version: 1.0.1
  description: | 
    # About us
    **EazyShop** is a open market product selling company. Any website can list our products by using our _APIs_.
    Shipping & other logistic will be taken care by us. You will get an `Affiliate commision`for selling our products.
    # Categories suported
    - Mobiles
      - Apple
      - Samsung
      - OnePlus
    - Laptops
    - Television
    - Headphones
  termsOfService: htps://example.com/terms
  contact:
    email: suppot@example.com
    name: API Support
    url: https://www.example.com/support
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://development.gigantic-server.com/v1
    description: Development Server
paths:
  /categories:
    get:
      summary: List all categories
      description: Return all of categories supported
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          examples:
            mobiles:
              value: 101
            laptops:
              value: 102
            headphones:
              value: 103
            televisions:
              value: 104
      responses:
        '200':
          description: A list of all categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 101
                      name: Mobiles
                    - categoryId: 102
                      name: Laptops
                    - categoryId: 103
                      name: headphones
                    - categoryId: 104
                      name: televisions
                single-category-data:
                  summary: Single category example data
                  value:
                    - categoryId: 104
                      name: televisions
                    
  /categories/{categoryId}:
    get:
      summary: List one categories
      description: Return one of categories supported
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1000
          example: 102
      responses:
        '200':
          description: A list of one categories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
                      
  /products:
    get:
      summary: List all products
      description: |
        Return the list of all products 
        supported by EazyShop
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            minimum: 100
            maximum: 1001
          example: 101
      responses:
        '200':
          description: A list of all products
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    categoryName:
                      type: string
                    quantity:
                      type: integer
                      description: |
                        ***Quantity** represents `stock`value when this filed is beign sent by shopo. Where
                        aas in the scenarios of consumer sending this field, it represents `nummbers of products items`inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0 *</u>
      
  /products/{productId}:
    get:
      summary: Return  products details
      description: |
        Return  products details
        supported by EazyShop
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            minimum: 100
            maximum: 1001
          example: 101
      responses:
        '200':
          description: Return  products details
          content:
            application/json:
              schema:
                type: object
                properties:
                  productId:
                    type: integer
                  name:
                    type: string
                  price:
                    type: number
                  categoryName:
                    type: string
                  quantity:
                    type: integer
  
  /orders:
    post:
      summary: Create a order
      description: Create a order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city: 
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '201':
          description: Return  orders details
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
    put:
      summary: Update a order
      description: Update a order
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: integer
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city: 
                      type: string
                    state:
                      type: string
                    zipcode:
                      type: string
      responses:
        '200':
          description:   orders details update successfuly
    delete:
      summary: delete a order
      description: delete a order
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description:   orders delete successfuly
    get:
      summary: Get order details
      description: Ger order details
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description:   orders details
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                    type: object
                    properties:
                      addressLine:
                        type: string
                      city: 
                        type: string
                      state:
                        type: string
                      zipcode:
                        type: string
            
      
